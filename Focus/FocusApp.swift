//
//  FocusApp.swift
//  Focus
//
//  Created by Klim on 11/14/24.
//

import SwiftUI
import UserNotifications

@main
struct FocusApp: App {
	@StateObject private var timer = PomodoroTimer(workInMinutes: 1, breakInMinutes: 1)
	@StateObject private var updateChecker = UpdateChecker() // –ò—Å–ø–æ–ª—å–∑—É–µ–º UpdateChecker
	@State private var isWorkMode: Bool = false

	var body: some Scene {
		MenuBarExtra {
			VStack {
				TimerDemo(timer: timer)
					.frame(minWidth: 300, minHeight: 300)
					.onAppear {
						isWorkMode = timer.mode == .work ? true : false
						updateChecker.checkForUpdates() // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
					}

				// –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
				if updateChecker.updateAvailable {
					Button("Update Available! Click to Update") {
						updateChecker.downloadUpdate() // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
					}
					.padding()
					.foregroundColor(.red)
				}
			}
			.padding()
		} label: {
			HStack(spacing: 10) {
				Image(systemName: "timer")
				Text("\(timer.secondsLeftString) \(isWorkMode ? "üí™" : "‚òïÔ∏è")")
			}
		}
		.menuBarExtraStyle(.window)
	}
}
